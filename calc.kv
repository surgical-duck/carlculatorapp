ScreenManager:
    Simple:
    Advanced:    
    

<DisplayLabel@Label>:
    id: display
    size_hint_y: 0.3
    canvas.before:
        Color:
            rgba: (0.16, 0.16, 0.16, 1)
        Rectangle:
            size: display.size
            pos: display.pos
        #Color:
        #    rgba: (1, 1, 1, 1)
        #Line:
        #    width: 1
        #    rectangle: (self.pos[0], self.pos[1], self.width, self.height)
    text:""
    font_size:dp(45)
    #font_name: 'lcd.ttf'
    halign: 'right'
    valign: 'middle'
    text_size: self.width*0.9, self.height
    #shorten: True
    #shorten_from: 'left'


<RoundedButton@Button>:
    font_size:dp(30)
    #font_name: 'lcd.ttf'
    color: 1, 1, 1, 1
    background_normal: ''
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgba: (0.3, 0.3, 0.3, 1) if self.state == 'normal' else (0.4, 0.4, 0.4, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(50)]


<RoundedNumberButton@RoundedButton>:
    font_size:dp(30)
    #font_name: 'lcd.ttf'
    color: 1, 1, 1, 1
    background_normal: ''
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgba: (0.3, 0.3, 0.3, 1) if self.state == 'normal' else (0.4, 0.4, 0.4, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(50)]


<RoundedACButton@Button>:
    font_size:dp(30)
    #font_name: 'lcd.ttf'
    color: 1, 1, 1, 1
    background_normal: ''
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgba: (0.9, 0.3, 0.3, 1) if self.state == 'normal' else (1, 0.4, 0.4, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(50)]


<RoundedEqualButton@RoundedButton>:
    font_size:dp(30)
    #font_name: 'lcd.ttf'
    color: 1, 1, 1, 1
    background_normal: ''
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgba: (0.3, 0.3, 0.9, 1) if self.state == 'normal' else (0.4, 0.4, 1, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(50)]


<Simple>:
    name: 'simple'
    display: display

    GridLayout:
        rows: 2
        cols: 1
        size: root.width, root.height
        padding: dp(0)
        spacing: dp(10)
        background_color: (0, 0, 0, 0)
        background_normal: ''
        canvas.before:
            Color:
                rgba: 0.22, 0.22, 0.22, 1
            Rectangle:
                size: self.size
                pos: self.pos

        DisplayLabel:
            id: display            

        BoxLayout:
            orientation: 'vertical'
            size_hint_y: 0.7
            padding: (dp(15), dp(5), dp(15), dp(15))

            BoxLayout: 
                padding: dp(0)
                spacing: dp(10)
                size_hint_y: 0.16
                RoundedButton:
                    text: '×'
                    on_press: root.handle_operators(self.text)
                    font_size:dp(35)
                RoundedButton:
                    text: '÷'
                    on_press: root.handle_operators(self.text)
                    font_size:dp(35)
                RoundedButton:
                    text: '+'
                    on_press: root.handle_operators(self.text)
                    font_size:dp(35)
                RoundedButton:
                    text: '-'
                    on_press: root.handle_operators(self.text)
                    font_size:dp(35)

            BoxLayout:
                size_hint_y: 0.84
                orientation: 'vertical'
                padding: dp(0)
                spacing: dp(0)

                BoxLayout:
                    padding: (0, dp(10), 0, dp(10))
                    spacing: dp(10)

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(10)

                        RoundedButton:
                            text: '7'
                            on_press: display.text += self.text
                        RoundedButton:
                            text: '4'
                            on_press: display.text += self.text
                    
                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(10)

                        RoundedButton:
                            text: '8'
                            on_press: display.text += self.text
                        RoundedButton:
                            text: '5'
                            on_press: display.text += self.text
                    
                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(10)

                        RoundedButton:
                            text: '9'
                            on_press: display.text += self.text
                        RoundedButton:
                            text: '6'
                            on_press: display.text += self.text

                    RoundedButton:
                        on_press: display.text = root.backspace(display.text)
                        Image:
                            source: 'images/backspace.png'
                            center: self.parent.center
                            size: (dp(75), dp(50))

                BoxLayout:
                    padding: dp(0)
                    spacing: dp(10)

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(10)

                        RoundedButton:
                            text: '1'
                            on_press: display.text += self.text
                        RoundedACButton:
                            text: 'AC'
                            on_press: display.text = ''

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(10)

                        RoundedButton:
                            text: '2'
                            on_press: display.text += self.text
                        RoundedButton:
                            text: '0'
                            on_press: display.text += self.text

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(10)

                        RoundedButton:
                            text: '3'
                            on_press: display.text += self.text
                        RoundedButton:
                            text: '.'
                            on_press: display.text += self.text

                    RoundedEqualButton:
                        text: '='
                        on_press: display.text = root.evaluate_expression(display.text)
                        font_size:dp(35)

    FloatLayout:
        Button:
            size_hint_x: None
            size_hint_y: None
            size: (dp(50), dp(50))
            pos: (0, root.height-self.height)
            background_color: (0, 0, 0, 0)
            background_normal: ''
            canvas.before:
                Color:
                    rgba: (0.16, 0.16, 0.16, 1) if self.state == 'normal' else (0.26, 0.26, 0.26, 1)
                Rectangle:
                    size: self.size
                    pos: self.pos
            Image:
                source: 'images/menu_white.png'
                center: self.parent.center
                size: (self.parent.size[0]*0.7, self.parent.size[1]*0.7)
        
        Button:
            on_release: 
                app.root.current = 'advanced'
                root.manager.transition.direction = 'left'
            size_hint_x: None
            size_hint_y: None
            size: (dp(50), dp(50))
            pos: (dp(50), root.height-self.height)
            background_color: (0, 0, 0, 0)
            background_normal: ''
            canvas.before:
                Color:
                    rgba: (0.16, 0.16, 0.16, 1) if self.state == 'normal' else (0.26, 0.26, 0.26, 1)
                Rectangle:
                    size: self.size
                    pos: self.pos
            Image:
                source: 'images/swap.png'
                center: self.parent.center
                size: (self.parent.size[0]*0.7, self.parent.size[1]*0.7)


<Advanced>:
    name: 'advanced'
    display: display

    GridLayout:
        rows: 2
        cols: 1
        size: root.width, root.height
        padding: dp(0)
        spacing: dp(10)
        background_color: (0, 0, 0, 0)
        background_normal: ''
        canvas.before:
            Color:
                rgba: 0.22, 0.22, 0.22, 1
            Rectangle:
                size: self.size
                pos: self.pos

        DisplayLabel:
            id: display
                
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: 0.7

            GridLayout:
                cols: 4
                size_hint_y: 0.22
                padding: (dp(15), dp(5), dp(15), dp(15))
                spacing: dp(10)

                RoundedButton:
                    text: 'π'
                    on_press: display.text += self.text
                RoundedButton:
                    text: 'e'
                    on_press: display.text += self.text              
                RoundedButton:
                    text: '('
                    on_press: display.text += self.text
                RoundedButton:
                    text: ')'
                    on_press: display.text += self.text
                
                RoundedButton:
                    text: 'DEG/\nRAD'
                    on_press: print('Currently only supports radians.')
                    #Have float window in display toggling deg/rad                
                    font_size: dp(20)
                RoundedButton:
                    text: 'sin'
                    font_size: dp(25)
                    on_press: display.text += self.text + '('
                RoundedButton:
                    text: 'cos'
                    font_size: dp(25)
                    on_press: display.text += self.text + '('
                RoundedButton:
                    text: 'tan'
                    font_size: dp(25)
                    on_press: display.text += self.text + '('
                

            GridLayout:
                cols: 4
                size_hint_y: 0.78
                padding: (dp(15), dp(5), dp(15), dp(15))
                spacing: dp(10)

                RoundedButton:
                    text: '^'
                    on_press: root.handle_operators(self.text)
                RoundedButton:
                    on_press: display.text += 'sqrt('
                    Image:
                        source: 'images/sqrt.png'
                        center: self.parent.center
                        size: (dp(40), dp(40))
                RoundedButton:
                    on_press: display.text = root.backspace(display.text)
                    Image:
                        source: 'images/backspace.png'
                        center: self.parent.center
                        size: (dp(75), dp(50))
                    
                RoundedButton:
                    text: '×'
                    on_press: root.handle_operators(self.text)
                
                RoundedButton:
                    text: '7'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '8'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '9'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '÷'
                    on_press: root.handle_operators(self.text)

                RoundedButton:
                    text: '4'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '5'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '6'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '+'
                    on_press: root.handle_operators(self.text)

                RoundedButton:
                    text: '1'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '2'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '3'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '-'
                    on_press: root.handle_operators(self.text)

                RoundedACButton:
                    text: 'AC'
                    on_press: display.text = ''
                RoundedButton:
                    text: '0'
                    on_press: display.text += self.text
                RoundedButton:
                    text: '.'
                    on_press: display.text += self.text
                RoundedEqualButton:
                    text: '='
                    on_press: display.text = root.evaluate_expression(display.text)
    FloatLayout:
        Button:
            size_hint_x: None
            size_hint_y: None
            size: (dp(50), dp(50))
            pos: (0, root.height-self.height)
            background_color: (0, 0, 0, 0)
            background_normal: ''
            canvas.before:
                Color:
                    rgba: (0.16, 0.16, 0.16, 1) if self.state == 'normal' else (0.26, 0.26, 0.26, 1)
                Rectangle:
                    size: self.size
                    pos: self.pos
            Image:
                source: 'images/menu_white.png'
                center: self.parent.center
                size: (self.parent.size[0]*0.7, self.parent.size[1]*0.7)
        
        Button:
            on_release: 
                app.root.current = 'simple'
                root.manager.transition.direction = 'right'
            size_hint_x: None
            size_hint_y: None
            size: (dp(50), dp(50))
            pos: (dp(50), root.height-self.height)
            background_color: (0, 0, 0, 0)
            background_normal: ''
            canvas.before:
                Color:
                    rgba: (0.16, 0.16, 0.16, 1) if self.state == 'normal' else (0.26, 0.26, 0.26, 1)
                Rectangle:
                    size: self.size
                    pos: self.pos
            Image:
                source: 'images/swap.png'
                center: self.parent.center
                size: (self.parent.size[0]*0.7, self.parent.size[1]*0.7)
